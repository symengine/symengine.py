language: cpp
compiler:
  - gcc
  - clang
os:
  - linux
  - osx
sudo: false
addons:
  apt:
    packages:
    - libgmp-dev
    - libmpfr-dev
    - libmpc-dev
    - binutils-dev
env:
  ## All these variables are sent into the bin/test_travis.sh script. See this
  ## script to know how they are used. Most of them are just passed to cmake,
  ## so if they are not set, cmake will use a default value. For the rest, the
  ## bin/test_travis.sh script usually checks for either "yes" or "no" in an if
  ## statement, so if the variable is not set, the other if branch will get
  ## executed.

  ## Out of tree builds (default):
  - BUILD_TYPE="Debug" WITH_BFD="yes" PYTHON_VERSION="2.7"

  ## In-tree builds (we just check a few configurations to make sure they work):
  # Debug build with Python 2.7:
  - BUILD_TYPE="Debug" WITH_BFD="yes" PYTHON_VERSION="2.7"
  # Release build shared lib with Python 2.7:
  - PYTHON_VERSION="2.7" BUILD_SHARED_LIBS="yes"

  # These test the setup.py file
  - PYTHON_VERSION="2.6" WITH_MPFR="yes"
  - PYTHON_VERSION="2.7" WITH_MPC="yes"
  - PYTHON_VERSION="3.3" WITH_MPC="yes"
  - PYTHON_VERSION="3.4" WITH_MPFR="yes"

  - BUILD_TYPE="Release" WITH_SAGE="yes" WITH_MPC="yes"
  - BUILD_TYPE="Debug" WITH_BFD="yes" PYTHON_VERSION="2.7" SKIP_NUMPY="yes"

matrix:
  exclude:
    - compiler: clang
    - os: osx
  include:
    - env: BUILD_TYPE="Debug" WITH_BFD="yes" PYTHON_VERSION="2.7"
      compiler: clang
      os: linux
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - clang
          - libstdc++-4.8-dev
          - libgmp-dev
          - binutils-dev
    - env: BUILD_TYPE="Release" PYTHON_VERSION="2.7"
      compiler: clang
      os: linux
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - clang
          - libstdc++-4.8-dev
          - libgmp-dev
    - env: BUILD_TYPE="Debug" PYTHON_VERSION="2.7"
      compiler: clang
      os: osx
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - clang
          - libstdc++-4.8-dev
          - libgmp-dev
          - binutils-dev
    - env: BUILD_TYPE="Release" PYTHON_VERSION="2.7"
      compiler: clang
      os: osx
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - clang
          - libstdc++-4.8-dev
          - libgmp-dev
    - env: BUILD_TYPE="Debug" PYTHON_VERSION="2.7"
      compiler: gcc
      os: osx
    - env: BUILD_TYPE="Release" PYTHON_VERSION="2.7"
      compiler: gcc
      os: osx

install:
  - export PYTHON_SOURCE_DIR=`pwd`
  - export TEST_CPP="no"

  - git clone https://github.com/symengine/symengine symengine-cpp
  - cd symengine-cpp
  - git checkout 8537c67507fae9b1d8d575d322c6ade4f1a59297

  # Setup travis for C++ library
  - source bin/install_travis.sh

  # Setup travis for Python wrappers
  - cd $PYTHON_SOURCE_DIR
  - source bin/install_travis.sh

  # Build C++ library
  - cd symengine-cpp
  - source bin/test_travis.sh

script:
  # Build Python wrappers and test
  - cd $PYTHON_SOURCE_DIR
  - bin/test_travis.sh

notifications:
  email: false
